# -*- coding: utf-8 -*-
"""Fake News prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_5gWqGXSoJO_oPPPQ6bNjFi5V7JMFDP3
"""

import pandas as pd
import numpy as np
import re
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

import nltk
nltk.download('stopwords')

print(stopwords.words('english'))

data=pd.read_csv('train.csv')

data.head()

data.shape

data.isnull().sum()

data = data.fillna('')



data['content'] = data['author'] + ' ' + data['title']

print(data['content'])

X= data.drop(columns='label',axis=1)
Y=data['label']

print(X)
print(Y)

port_stem=PorterStemmer()

def stemming(content):
    stemmed_content = re.sub('[^a-zA-Z]',' ',content)
    stemmed_content = stemmed_content.lower()
    stemmed_content = stemmed_content.split()
    stemmed_content = [port_stem.stem(word) for word in stemmed_content if not word in stopwords.words('english')]
    stemmed_content = ' '.join(stemmed_content)
    return stemmed_content

data['content']=data['content'].apply(stemming)

print(data['content'])

X = data['content'].values
Y = data['label'].values

print(X)

print(Y)

Y.shape

vectorizer=TfidfVectorizer()
X = data['content'].astype(str).values
vectorizer.fit(X)
X=vectorizer.transform(X)

print(X)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

model=LogisticRegression()

model.fit(X_train,Y_train)

X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print('Accuracy score of the training data : ', training_data_accuracy)

X_test_prediction=model.predict(X_test)
X_test_accuracy=accuracy_score(X_test_prediction,Y_test)

print("The accuracy of the testing data is ",X_test_accuracy)

X_new = X_test[3]
prediction=model.predict(X_new)

if prediction == 1:
   print("The new is fake")
else:
  print("The new is real")

# Now checking the result is correct or not
print(Y_test[3])

